import numpy as np

P_SHUFFLE = 5 * 1e-02
P_FRACTAL = 0.2 * 1e-02
P_LINO = 0.2 * 1e-02
P_DROP = 1.5 * 1e-02
P_SHORTEN = 10 * 1e-02

key_matrix_linotype = np.array([
    ['e', 'r', 'u', 'b',  '@', 'fl', '.', ',', '-',   '1', '6', 'E', 'R', 'U', 'B',],
    ['n', 'd', 'm', 'f',  '@', 'en', 'ä', '?', ':',   '2', '7', 'N', 'D', 'M', 'F',],
    ['i', 'g', 'l', 's',  '@', 'fi', 'ö', '@', '‘',   '3', '8', 'I', 'G', 'L', 'S',],
    ['a', 'o', 'h', 'k',  'ch', '”', 'ü', '@', '@',   '4', '9', 'A', 'O', 'H', 'K',],
    ['t', 'v', 'w', 'p',  'ck', 'ß', '“', '(', ')',   '5', '0', 'T', 'V', 'W', 'P',],
    ['x', 'c', 'y', 'z',  'j', 'q', 'J', '!', ';',    '@', '_', 'X', 'C', 'Y', 'Z',],
])

key_matrix_linotype_reduced = np.array([
    ['e', 'r', 'u', 'b',  '@', 'fl', '@', '@', '@',   '1', '6', 'E', 'R', 'U', 'B',],
    ['n', 'd', 'm', 'f',  '@', 'en', 'ä', '@', '@',   '2', '7', 'N', 'D', 'M', 'F',],
    ['i', 'g', 'l', 's',  '@', 'fi', 'ö', '@', '@',   '3', '8', 'I', 'G', 'L', 'S',],
    ['a', 'o', 'h', 'k',  'ch', '@', 'ü', '@', '@',   '4', '9', 'A', 'O', 'H', 'K',],
    ['t', 'v', 'w', 'p',  'ck', '@', '@', '@', '@',   '5', '0', 'T', 'V', 'W', 'P',],
    ['x', 'c', 'y', 'z',  'j', 'q', 'J', '@', '@',    '@', '@', 'X', 'C', 'Y', 'Z',],
])

fractal_confusion_pairs = {
    ('A','U'),
    ('D','O'),
    ('W','M'),
    ('N','R'),
    ('R','K'),
    ('S','G'),
    ('C','E'),
    ('V','B'),
    ('I','J'),
    ('d','b'),
    ('f','s'),
    ('r','x'),
    ('t','k'),
    ('u','n'),
    ('n','y'),
    ('y','h'),
    ('ß','tz'),
    ('ch','ck'),
    ('ck','d'),
    ('k','f'),
    ('t','i'),
    ('p','v'),
    ('b','h'),
}